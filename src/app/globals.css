@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 0 0% 3.9%;
    --card: 0 0% 100%;
    --card-foreground: 0 0% 3.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 0 0% 3.9%;
    --primary: 0 0% 9%;
    --primary-foreground: 0 0% 98%;
    --secondary: 0 0% 96.1%;
    --secondary-foreground: 0 0% 9%;
    --muted: 0 0% 96.1%;
    --muted-foreground: 0 0% 45.1%;
    --accent: 0 0% 96.1%;
    --accent-foreground: 0 0% 9%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 89.8%;
    --input: 0 0% 89.8%;
    --ring: 0 0% 3.9%;
    --radius: 0.5rem;
    --chart-1: 12 76% 61%;
    --chart-2: 173 58% 39%;
    --chart-3: 197 37% 24%;
    --chart-4: 43 74% 66%;
    --chart-5: 27 87% 67%;
  }

  .dark {
    --background: 0 0% 3.9%;
    --foreground: 0 0% 98%;
    --card: 0 0% 3.9%;
    --card-foreground: 0 0% 98%;
    --popover: 0 0% 3.9%;
    --popover-foreground: 0 0% 98%;
    --primary: 0 0% 98%;
    --primary-foreground: 0 0% 9%;
    --secondary: 0 0% 14.9%;
    --secondary-foreground: 0 0% 98%;
    --muted: 0 0% 14.9%;
    --muted-foreground: 0 0% 63.9%;
    --accent: 0 0% 14.9%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 14.9%;
    --input: 0 0% 14.9%;
    --ring: 0 0% 83.1%;
    --chart-1: 220 70% 50%;
    --chart-2: 160 60% 45%;
    --chart-3: 30 80% 55%;
    --chart-5: 340 75% 55%;
  }
}

/* Custom styles for Agent Builder */
.agent-canvas {
  background-image: radial-gradient(circle, #e5e7eb 1px, transparent 1px);
  background-size: 20px 20px;
}

.node-input {
  @apply bg-blue-500 text-white;
}

.node-ai {
  @apply bg-purple-500 text-white;
}

.node-output {
  @apply bg-green-500 text-white;
}

.node-logic {
  @apply bg-orange-500 text-white;
}

.node-api {
  @apply bg-red-500 text-white;
}

/* React Flow custom styles */
.react-flow__node {
  @apply rounded-lg shadow-lg border-2 border-gray-200;
}

.react-flow__node.selected {
  @apply border-blue-500;
}

.react-flow__edge {
  @apply stroke-gray-400;
}

.react-flow__edge.selected {
  @apply stroke-blue-500;
}

.react-flow__handle {
  @apply w-3 h-3 bg-gray-400 border-2 border-white;
}

.react-flow__handle.react-flow__handle-top {
  @apply top-0;
}

.react-flow__handle.react-flow__handle-bottom {
  @apply bottom-0;
}

/* REACT FLOW CONTROLS - Versão limpa e simplificada */
.react-flow__controls {
  position: absolute !important;
  top: 80px !important;
  left: 20px !important;
  z-index: 10 !important;
  display: inline-flex !important;
  flex-direction: column !important;
  gap: 4px !important;
  width: auto !important;
  height: auto !important;
  background: transparent !important;
  border: none !important;
  box-shadow: none !important;
  outline: none !important;
  bottom: auto !important;
  right: auto !important;
}

.react-flow__controls button {
  background: rgba(255, 255, 255, 0.9) !important;
  border: 1px solid rgba(255, 255, 255, 0.2) !important;
  color: #374151 !important;
  box-shadow: none !important;
  outline: none !important;
  margin: 0 !important;
  padding: 8px !important;
  border-radius: 6px !important;
}

.react-flow__controls button:hover {
  background: rgba(59, 130, 246, 0.8) !important;
  color: white !important;
  border-color: rgba(59, 130, 246, 0.8) !important;
}

.react-flow__controls::before,
.react-flow__controls::after,
.react-flow__controls button::before,
.react-flow__controls button::after {
  display: none !important;
  content: none !important;
}

.react-flow__panel.react-flow__controls {
  background: transparent !important;
  border: none !important;
  box-shadow: none !important;
}

.react-flow {
  overflow: hidden !important;
}

.react-flow__viewport {
  overflow: visible !important;
}

.agent-canvas {
  width: 100% !important;
  height: 100% !important;
}

.react-flow__minimap {
  z-index: 10;
  bottom: 20px;
  left: 20px;
  background: rgba(17, 24, 39, 0.8) !important;
  border: 1px solid rgba(75, 85, 99, 0.5) !important;
  border-radius: 8px !important;
}

.agent-canvas .react-flow__controls {
  top: 140px !important;
  left: 20px !important;
}

/* Loading animations */
.loading-dots {
  display: inline-block;
  position: relative;
  width: 80px;
  height: 80px;
}

.loading-dots div {
  position: absolute;
  top: 33px;
  width: 13px;
  height: 13px;
  border-radius: 50%;
  background: #3b82f6;
  animation-timing-function: cubic-bezier(0, 1, 1, 0);
}

.loading-dots div:nth-child(1) {
  left: 8px;
  animation: loading-dots1 0.6s infinite;
}

.loading-dots div:nth-child(2) {
  left: 8px;
  animation: loading-dots2 0.6s infinite;
}

.loading-dots div:nth-child(3) {
  left: 32px;
  animation: loading-dots2 0.6s infinite;
}

.loading-dots div:nth-child(4) {
  left: 56px;
  animation: loading-dots3 0.6s infinite;
}

@keyframes loading-dots1 {
  0% {
    transform: scale(0);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes loading-dots3 {
  0% {
    transform: scale(1);
  }
  100% {
    transform: scale(0);
  }
}

@keyframes loading-dots2 {
  0% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(24px, 0);
  }
}

/* Glass effect */
.glass {
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
}

/* Hover effects */
.hover-lift {
  transition: transform 0.2s ease-in-out;
}

.hover-lift:hover {
  transform: translateY(-2px);
}

/* Success pulse animation */
.success-pulse {
  animation: success-pulse 2s ease-in-out infinite;
}

@keyframes success-pulse {
  0%,
  100% {
    box-shadow: 0 0 0 0 rgba(34, 197, 94, 0.7);
  }
  50% {
    box-shadow: 0 0 0 10px rgba(34, 197, 94, 0);
  }
}

@layer base {
  /* Forçar o overlay do Dialog a ser escuro */
  [data-radix-dialog-overlay] {
    background-color: hsl(0 0% 0% / 0.8) !important;
    backdrop-filter: blur(4px) !important;
  }
}
